---

- name: Install python dependencies
  apt:
    name:
      - python3
      - python3-venv
    state: latest
    update_cache: true
    cache_valid_time: 3600
    force_apt_get: true
  become: true
  become_user: root

- name: Create the application user
  user:
    name: "{{ wsgi_app_user }}"
    shell: /bin/bash
  become: true
  become_user: root

- name: Create virtualenv
  pip:
    name:
      - wheel
    virtualenv: "/home/{{ wsgi_app_user }}/venv"
    virtualenv_command: python3 -m venv
  become: true
  become_user: "{{ wsgi_app_user }}"

- name: Install web server dependencies
  pip:
    name:
      - certbot
      - gunicorn
    virtualenv: "/home/{{ wsgi_app_user }}/venv"
    virtualenv_command: python3 -m venv
  become: true
  become_user: "{{ wsgi_app_user }}"

- name: Setup authorized SSH public key for GitHub Actions
  authorized_key:
    user: "{{ wsgi_app_user }}"
    key: "{{ wsgi_app_deployment_key }}"
  become: true
  become_user: "{{ wsgi_app_user }}"

- name: Setup systemd environment vars file
  lineinfile:
    path: /home/{{ wsgi_app_user }}/{{ wsgi_app_name }}.env
    regexp: "^{{ item.name }}="
    line: "{{ item.name }}={{ item.value }}"
    create: true
  with_items: "{{ wsgi_app_env_vars }}"
  no_log: true
  become: true
  become_user: "{{ wsgi_app_user }}"

- name: Setup systemd service file
  template:
    src: wsgi.service.j2
    dest: /etc/systemd/system/{{ wsgi_app_name }}.service
    mode: "0644"
  become: true
  become_user: root

- name: Setup systemd socket file
  template:
    src: wsgi.socket.j2
    dest: /etc/systemd/system/{{ wsgi_app_name }}.socket
    mode: "0644"
  become: true
  become_user: root

- name: Allow application user to restart the app via systemctl
  lineinfile:
    path: /etc/sudoers
    regexp: "^{{ wsgi_app_user }}"
    line: "{{ wsgi_app_user }} ALL=NOPASSWD: /bin/systemctl restart {{ wsgi_app_name }}"
    validate: "visudo -cf %s"
  become: true
  become_user: root

- name: Enable systemd unit at startup
  systemd:
    name: "{{ wsgi_app_name }}"
    enabled: true
    daemon_reload: true
  become: true
  become_user: root
